import{_ as e,c as a,o as t,a2 as s}from"./chunks/framework.BLu2N65A.js";const k=JSON.parse('{"title":"Class Vector2","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/classes/utils/vector2.md","filePath":"reference/classes/utils/vector2.md","lastUpdated":null}'),r={name:"reference/classes/utils/vector2.md"},o=s('<h1 id="class-vector2" tabindex="-1">Class <a href="https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/math/vector2.ts" target="_blank" rel="noreferrer"><code>Vector2</code></a> <a class="header-anchor" href="#class-vector2" aria-label="Permalink to &quot;Class [`Vector2`](https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/math/vector2.ts)&quot;">​</a></h1><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><blockquote><p><code>new Vector2(x, y)</code></p></blockquote><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><p><strong>x</strong> : <code>number</code></p></li><li><p><strong>y</strong> : <code>number</code> (optional)</p></li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>If you leave out the parameter <code>y</code>, the properties <code>x</code> and <code>y</code> will be set to the same value, e.g.:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="x" tabindex="-1">x : <code>number</code> <a class="header-anchor" href="#x" aria-label="Permalink to &quot;x : `number` {#x}&quot;">​</a></h3><h3 id="y" tabindex="-1">y : <code>number</code> <a class="header-anchor" href="#y" aria-label="Permalink to &quot;y : `number` {#y}&quot;">​</a></h3><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="round-vector2" tabindex="-1">round () : <code>Vector2</code> <a class="header-anchor" href="#round-vector2" aria-label="Permalink to &quot;round () : `Vector2`&quot;">​</a></h3><p>Round the values of this vector to full numbers</p><h3 id="getdistance-x-number-y-number-number" tabindex="-1">getDistance (x : <code>number</code>, y : <code>number</code>) : <code>number</code> <a class="header-anchor" href="#getdistance-x-number-y-number-number" aria-label="Permalink to &quot;getDistance (x : `number`, y : `number`) : `number`&quot;">​</a></h3><h3 id="getdistance-vector2-vector2-number" tabindex="-1">getDistance (vector2 : <code>Vector2</code>) : <code>number</code> <a class="header-anchor" href="#getdistance-vector2-vector2-number" aria-label="Permalink to &quot;getDistance (vector2 : `Vector2`) : `number`&quot;">​</a></h3><p>Get the distance between this vector and another.</p>',15),i=[o];function n(c,l,h,d,p,u){return t(),a("div",null,i)}const m=e(r,[["render",n]]);export{k as __pageData,m as default};
