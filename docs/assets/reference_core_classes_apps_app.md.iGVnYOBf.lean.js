import{_ as i,c as n,j as e,a,t as o,a1 as l,o as r}from"./chunks/framework.C4R7_RYb.js";const m=JSON.parse('{"title":"Class App","description":"An application that can be run by ProzillaOS","frontmatter":{"outline":"deep","description":"An application that can be run by ProzillaOS","package":"@prozilla-os/core","head":[["meta",{"name":"og:title","content":"Class App | ProzillaOS Docs"}],["meta",{"name":"twitter:title","content":"Class App | ProzillaOS Docs"}],["meta",{"name":"og:description","content":"An application that can be run by ProzillaOS"}],["meta",{"name":"twitter:description","content":"An application that can be run by ProzillaOS"}],["link",{"rel":"canonical","href":"https://os.prozilla.dev/docs/reference/core/classes/apps/app"}],["meta",{"name":"og:url","content":"https://os.prozilla.dev/docs/reference/core/classes/apps/app"}],["meta",{"name":"twitter:url","content":"https://os.prozilla.dev/docs/reference/core/classes/apps/app"}],["meta",{"name":"og:locale","content":"en_US"}],["meta",{"name":"og:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"twitter:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}]]},"headers":[],"relativePath":"reference/core/classes/apps/app.md","filePath":"reference/core/classes/apps/app.md"}'),p={name:"reference/core/classes/apps/app.md"};function c(s,t,d,h,u,g){return r(),n("div",null,[t[0]||(t[0]=e("h1",{id:"class-app",tabindex:"-1"},[a("Class "),e("a",{href:"https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/system/configs/app.tsx",target:"_blank",rel:"noreferrer"},[e("code",null,"App")]),a(),e("a",{class:"header-anchor",href:"#class-app","aria-label":'Permalink to "Class [`App`](https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/system/configs/app.tsx)"'},"​")],-1)),e("p",null,o(s.$frontmatter.description),1),t[1]||(t[1]=l(`<p>Applications can be installed by adding them to the <code>apps</code> array in <a href="./../system/apps-config#apps-app"><code>AppsConfig</code></a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><blockquote><p><code>&lt;AppProps extends WindowProps = WindowProps&gt;</code></p></blockquote><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><blockquote><p><code>new App(name, id, windowContent, windowOptions)</code></p></blockquote><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><br><h4 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h4><ul><li><strong>Type:</strong> <code>string</code></li></ul><h4 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h4><ul><li><strong>Type:</strong> <code>string</code></li></ul><h4 id="windowcontent" tabindex="-1">windowContent <a class="header-anchor" href="#windowcontent" aria-label="Permalink to &quot;windowContent&quot;">​</a></h4><ul><li><strong>Type:</strong> <code>React.FC&lt;AppProps&gt;</code></li></ul><h4 id="windowoptions" tabindex="-1">windowOptions <a class="header-anchor" href="#windowoptions" aria-label="Permalink to &quot;windowOptions&quot;">​</a></h4><ul><li><strong>Optional</strong></li><li><strong>Type:</strong> <code>WindowOptions</code></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WindowOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	[</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">References</p><p></p><ul><li><a href="./../utils/vector2">Vector2</a></li></ul></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="name-1" tabindex="-1">name <a class="header-anchor" href="#name-1" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>The display name of this application</p><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&quot;App&quot;</code></li></ul><h3 id="id-1" tabindex="-1">id <a class="header-anchor" href="#id-1" aria-label="Permalink to &quot;id&quot;">​</a></h3><p>The unique ID of this application</p><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&quot;app&quot;</code></li></ul><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>Every app must have a unique ID that only contains lower case letters (a-z), numbers (0-9) and dashes (-).</p></div><h3 id="windowcontent-1" tabindex="-1">windowContent <a class="header-anchor" href="#windowcontent-1" aria-label="Permalink to &quot;windowContent&quot;">​</a></h3><p>React component that renders this app inside a window when the app is running</p><ul><li><strong>Type:</strong> <code>React.FC&lt;AppProps&gt;</code></li></ul><h3 id="windowoptions-1" tabindex="-1">windowOptions <a class="header-anchor" href="#windowoptions-1" aria-label="Permalink to &quot;windowOptions&quot;">​</a></h3><p>Default options that get passed to the <code>windowContent</code> component</p><ul><li><strong>Type:</strong> <code>WindowOptions</code></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WindowOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	[</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">References</p><p></p><ul><li><a href="./../utils/vector2">Vector2</a></li></ul></div><h3 id="description" tabindex="-1">description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;description&quot;">​</a></h3><p>Description of this application</p><ul><li><strong>Type:</strong> <code>string | null</code></li></ul><h3 id="iconurl" tabindex="-1">iconUrl <a class="header-anchor" href="#iconurl" aria-label="Permalink to &quot;iconUrl&quot;">​</a></h3><p>URL of the icon of this application</p><ul><li><strong>Type:</strong> <code>string | null</code></li></ul><h3 id="role" tabindex="-1">role <a class="header-anchor" href="#role" aria-label="Permalink to &quot;role&quot;">​</a></h3><p>Defines what parts of the OS this app is responsible for and how it can be used by other apps</p><ul><li><strong>Type:</strong> <code>string | null</code></li></ul><h3 id="associatedextensions" tabindex="-1">associatedExtensions <a class="header-anchor" href="#associatedextensions" aria-label="Permalink to &quot;associatedExtensions&quot;">​</a></h3><p>An array of file extensions that this application is used to open and read</p><ul><li><strong>Type:</strong> <code>string | null</code></li></ul><h3 id="pinnedbydefault" tabindex="-1">pinnedByDefault <a class="header-anchor" href="#pinnedbydefault" aria-label="Permalink to &quot;pinnedByDefault&quot;">​</a></h3><p>Determines whether the app is pinned by default</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><h3 id="launchatstartup" tabindex="-1">launchAtStartup <a class="header-anchor" href="#launchatstartup" aria-label="Permalink to &quot;launchAtStartup&quot;">​</a></h3><p>Determines whether the app is launched at startup</p><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code></li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="setname-name" tabindex="-1">setName(name) <a class="header-anchor" href="#setname-name" aria-label="Permalink to &quot;setName(name)&quot;">​</a></h3><p>Set the display name of this application</p><ul><li><strong>Parameters</strong><ul><li><strong>name</strong><ul><li><strong>Type:</strong> <code>string</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="setdescription-description" tabindex="-1">setDescription(description) <a class="header-anchor" href="#setdescription-description" aria-label="Permalink to &quot;setDescription(description)&quot;">​</a></h3><p>Set the description of this application</p><ul><li><strong>Parameters</strong><ul><li><strong>description</strong><ul><li><strong>Type:</strong> <code>string</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="seticonurl-iconurl" tabindex="-1">setIconUrl(iconUrl) <a class="header-anchor" href="#seticonurl-iconurl" aria-label="Permalink to &quot;setIconUrl(iconUrl)&quot;">​</a></h3><p>Set the URL of the icon of this application</p><ul><li><strong>Parameters</strong><ul><li><strong>iconUrl</strong><ul><li><strong>Type:</strong> <code>string | null</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="setrole-role" tabindex="-1">setRole(role) <a class="header-anchor" href="#setrole-role" aria-label="Permalink to &quot;setRole(role)&quot;">​</a></h3><p>Set the role of this application</p><ul><li><strong>Parameters</strong><ul><li><strong>role</strong><ul><li><strong>Type:</strong> <code>string | null</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="setassociatedextensions-extensions" tabindex="-1">setAssociatedExtensions(extensions) <a class="header-anchor" href="#setassociatedextensions-extensions" aria-label="Permalink to &quot;setAssociatedExtensions(extensions)&quot;">​</a></h3><p>Set the associated extensions of this application</p><ul><li><strong>Parameters</strong><ul><li><strong>extensions</strong><ul><li><strong>Type:</strong> <code>string[] | null</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="setpinnedbydefault-pinnedbydefault" tabindex="-1">setPinnedByDefault(pinnedByDefault) <a class="header-anchor" href="#setpinnedbydefault-pinnedbydefault" aria-label="Permalink to &quot;setPinnedByDefault(pinnedByDefault)&quot;">​</a></h3><p>Changes whether this application is pinned by default or not</p><ul><li><strong>Parameters</strong><ul><li><strong>pinnedByDefault</strong><ul><li><strong>Type:</strong> <code>boolean</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="setlaunchatstartup-launchatstartup" tabindex="-1">setLaunchAtStartup(launchAtStartup) <a class="header-anchor" href="#setlaunchatstartup-launchatstartup" aria-label="Permalink to &quot;setLaunchAtStartup(launchAtStartup)&quot;">​</a></h3><p>Changes whether this application is launched at startup or not</p><ul><li><strong>Parameters</strong><ul><li><strong>launchAtStartup</strong><ul><li><strong>Type:</strong> <code>boolean</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>this</code></li></ul></li></ul><h3 id="windowcontent-props" tabindex="-1">WindowContent(props) <a class="header-anchor" href="#windowcontent-props" aria-label="Permalink to &quot;WindowContent(props)&quot;">​</a></h3><p>Renders the app as a React component</p><ul><li><strong>Parameters</strong><ul><li><strong>props</strong><ul><li><strong>Type:</strong> <code>AppProps</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>React.ReactElement</code></li></ul></li></ul>`,76))])}const b=i(p,[["render",c]]);export{m as __pageData,b as default};
