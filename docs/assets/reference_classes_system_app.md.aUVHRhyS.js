import{_ as e,c as t,o as a,a2 as o}from"./chunks/framework.BLu2N65A.js";const g=JSON.parse('{"title":"Class App","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/classes/system/app.md","filePath":"reference/classes/system/app.md","lastUpdated":1720464175000}'),s={name:"reference/classes/system/app.md"},n=o('<h1 id="class-app" tabindex="-1">Class <a href="https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/system/configs/app.tsx" target="_blank" rel="noreferrer"><code>App</code></a> <a class="header-anchor" href="#class-app" aria-label="Permalink to &quot;Class [`App`](https://github.com/prozilla-os/ProzillaOS/blob/main/packages/core/src/features/system/configs/app.tsx)&quot;">​</a></h1><p>An application that can be run by ProzillaOS</p><p>Applications can be installed by adding them to the <code>apps</code> array in <a href="./apps-config#apps-app"><code>AppsConfig</code></a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><blockquote><p><code>&lt;AppProps extends WindowProps = WindowProps&gt;</code></p></blockquote><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><blockquote><p><code>new App(name, id, windowContent, windowOptions)</code></p></blockquote><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><p><strong>name</strong> : <code>string</code></p></li><li><p><strong>id</strong> : <code>string</code></p></li><li><p><strong>windowContent</strong> : <code>React.FC&lt;AppProps&gt;</code></p></li><li><p><strong>windowOptions</strong> : <code>object</code> (optional)</p><ul><li>windowOptions.size : <code>Vector2</code></li></ul></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="name" tabindex="-1">name : <code>string</code> <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name : `string` {#name}&quot;">​</a></h3><p>The display name of this application</p><blockquote><p><strong>@default</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App&quot;</span></span></code></pre></div></blockquote><h3 id="id" tabindex="-1">id : <code>string</code> <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id : `string` {#id}&quot;">​</a></h3><p>The unique ID of this application</p><blockquote><p><strong>@default</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span></span></code></pre></div></blockquote><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>Every app must have a unique ID that only contains lower case letters (a-z), numbers (0-9) and dashes (-).</p></div><h3 id="window-content" tabindex="-1">windowContent : <code>React.FC&lt;AppProps&gt;</code> <a class="header-anchor" href="#window-content" aria-label="Permalink to &quot;windowContent : `React.FC&lt;AppProps&gt;` {#window-content}&quot;">​</a></h3><p>React component that renders this app inside a window when the app is running</p><h3 id="window-options" tabindex="-1">windowOptions : <code>object</code> <a class="header-anchor" href="#window-options" aria-label="Permalink to &quot;windowOptions : `object` {#window-options}&quot;">​</a></h3><p>Default options that get passed to the <code>windowContent</code> component</p><p>You can extend this object with any properties</p><h4 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h4><ul><li>windowOptions.size : <code>Vector2</code></li></ul><h3 id="description" tabindex="-1">description : <code>string | null</code> <a class="header-anchor" href="#description" aria-label="Permalink to &quot;description : `string | null` {#description}&quot;">​</a></h3><p>Description of this application</p><h3 id="icon-url" tabindex="-1">iconUrl : <code>string | null</code> <a class="header-anchor" href="#icon-url" aria-label="Permalink to &quot;iconUrl : `string | null` {#icon-url}&quot;">​</a></h3><p>URL of the icon of this application</p><h3 id="role" tabindex="-1">role : <code>string | null</code> <a class="header-anchor" href="#role" aria-label="Permalink to &quot;role : `string | null` {#role}&quot;">​</a></h3><p>Defines what parts of the OS this app is responsible for and how it can be used by other apps</p><h3 id="associated-extensions" tabindex="-1">associatedExtensions : <code>string[]</code> <a class="header-anchor" href="#associated-extensions" aria-label="Permalink to &quot;associatedExtensions : `string[]` {#associated-extensions}&quot;">​</a></h3><p>An array of file extensions that this application is used to open and read</p><h3 id="pinned-by-default" tabindex="-1">pinnedByDefault : <code>boolean</code> <a class="header-anchor" href="#pinned-by-default" aria-label="Permalink to &quot;pinnedByDefault : `boolean` {#pinned-by-default}&quot;">​</a></h3><p>Determines whether the app is pinned by default</p><blockquote><p><strong>@default</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></blockquote><h3 id="launch-at-startup" tabindex="-1">launchAtStartup : <code>boolean</code> <a class="header-anchor" href="#launch-at-startup" aria-label="Permalink to &quot;launchAtStartup : `boolean` {#launch-at-startup}&quot;">​</a></h3><p>Determines whether the app is launched at startup</p><blockquote><p><strong>@default</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div></blockquote><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="set-name" tabindex="-1">setName (name : <code>string</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-name" aria-label="Permalink to &quot;setName (name : `string`) =&gt; `this` {#set-name}&quot;">​</a></h3><p>Set the display name of this application</p><h3 id="set-description" tabindex="-1">setDescription (description : <code>string | null</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-description" aria-label="Permalink to &quot;setDescription (description : `string | null`) =&gt; `this` {#set-description}&quot;">​</a></h3><p>Set the description of this application</p><h3 id="set-icon-url" tabindex="-1">setIconUrl (iconUrl : <code>string | null</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-icon-url" aria-label="Permalink to &quot;setIconUrl (iconUrl : `string | null`) =&gt; `this` {#set-icon-url}&quot;">​</a></h3><p>Set the URL of the icon of this application</p><h3 id="set-role" tabindex="-1">setRole (role : <code>string | null</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-role" aria-label="Permalink to &quot;setRole (role : `string | null`) =&gt; `this` {#set-role}&quot;">​</a></h3><p>Set the role of this application</p><h3 id="set-associated-extensions" tabindex="-1">setAssociatedExtensions (extensions : <code>string[] | null</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-associated-extensions" aria-label="Permalink to &quot;setAssociatedExtensions (extensions : `string[] | null`) =&gt; `this` {#set-associated-extensions}&quot;">​</a></h3><p>Set the associated extensions of this application</p><h3 id="set-pinned-by-default" tabindex="-1">setPinnedByDefault (pinnedByDefault : <code>boolean</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-pinned-by-default" aria-label="Permalink to &quot;setPinnedByDefault (pinnedByDefault : `boolean`) =&gt; `this` {#set-pinned-by-default}&quot;">​</a></h3><p>Changes whether this application is pinned by default or not</p><h3 id="set-launch-at-startup" tabindex="-1">setLaunchAtStartup (launchAtStartup : <code>boolean</code>) =&gt; <code>this</code> <a class="header-anchor" href="#set-launch-at-startup" aria-label="Permalink to &quot;setLaunchAtStartup (launchAtStartup : `boolean`) =&gt; `this` {#set-launch-at-startup}&quot;">​</a></h3><p>Changes whether this application is launched at startup or not</p><h3 id="Window-content" tabindex="-1">WindowContent (props : <code>AppProps</code>) =&gt; <code>React.ReactElement</code> <a class="header-anchor" href="#Window-content" aria-label="Permalink to &quot;WindowContent (props : `AppProps`) =&gt; `React.ReactElement` {#Window-content}&quot;">​</a></h3><p>Renders the app as a React component</p>',55),i=[n];function r(l,p,c,d,h,u){return a(),t("div",null,i)}const m=e(s,[["render",r]]);export{g as __pageData,m as default};
