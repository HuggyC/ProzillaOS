import{_ as t,c as a,a3 as i,o as r}from"./chunks/framework.BAnOA2-A.js";const u=JSON.parse('{"title":"Self-hosting ProzillaOS","description":"Learn how to host ProzillaOS locally on your own device","frontmatter":{"outline":"deep","description":"Learn how to host ProzillaOS locally on your own device","image":"https://os.prozilla.dev/docs/thumbnails/self-hosting-guide-thumbnail.png","head":[["meta",{"name":"og:title","content":"Self-hosting ProzillaOS | ProzillaOS Docs"}],["meta",{"name":"twitter:title","content":"Self-hosting ProzillaOS | ProzillaOS Docs"}],["meta",{"name":"og:description","content":"Learn how to host ProzillaOS locally on your own device"}],["meta",{"name":"twitter:description","content":"Learn how to host ProzillaOS locally on your own device"}],["link",{"rel":"canonical","href":"https://os.prozilla.dev/docs/guides/self-hosting"}],["meta",{"name":"og:url","content":"https://os.prozilla.dev/docs/guides/self-hosting"}],["meta",{"name":"twitter:url","content":"https://os.prozilla.dev/docs/guides/self-hosting"}],["meta",{"name":"og:locale","content":"en_US"}],["meta",{"name":"og:image","content":"https://os.prozilla.dev/docs/thumbnails/self-hosting-guide-thumbnail.png"}],["meta",{"name":"twitter:image","content":"https://os.prozilla.dev/docs/thumbnails/self-hosting-guide-thumbnail.png"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}]]},"headers":[],"relativePath":"guides/self-hosting.md","filePath":"guides/self-hosting.md"}'),o={name:"guides/self-hosting.md"};function s(l,e,n,d,p,h){return r(),a("div",null,e[0]||(e[0]=[i(`<h1 id="self-hosting-prozillaos" tabindex="-1">Self-hosting ProzillaOS <a class="header-anchor" href="#self-hosting-prozillaos" aria-label="Permalink to &quot;Self-hosting ProzillaOS&quot;">​</a></h1><p>This guide explains how to host ProzillaOS locally on your own device or on your own server.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Make sure you have <a href="https://nodejs.org/en" target="_blank" rel="noreferrer">NodeJS</a> (version v18.12 or higher) installed on your device.</p><ol><li><p>Clone the GitHub repository.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes material-theme material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">git</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> clone</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> https://github.com/prozilla-os/ProzillaOS.git</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> ProzillaOS</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">cd</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> ProzillaOS</span></span></code></pre></div></li><li><p>Install package manager and dependencies</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes material-theme material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">npm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> install</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> pnpm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> -g</span></span>
<span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">pnpm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> install</span></span></code></pre></div></li><li><p>Run project</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes material-theme material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">pnpm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> start</span></span></code></pre></div></li><li><p>Test local dev server by visiting <a href="http://localhost:3000/" target="_blank" rel="noreferrer">localhost:3000</a></p></li></ol><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>In a local environment, ProzillaOS packages will try to import uncompiled versions of other ProzillaOS packages from their respective <code>src</code> directory. If this does not happen correctly and a package tries to import a compiled version of another package from its respective <code>dist</code> directory, you might run into an error message saying <code>module not found</code>. Executing the command <code>pnpm run packages:build</code> will compile each package into their <code>dist</code> directories and resolve this error.</p></div><h2 id="scripts" tabindex="-1">Scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;Scripts&quot;">​</a></h2><p>ProzillaOS uses the package manager <a href="https://pnpm.io/" target="_blank" rel="noreferrer">pnpm</a> to run scripts.</p><h3 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-label="Permalink to &quot;General&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Script</th><th>Description</th></tr></thead><tbody><tr><td><pre>pnpm run start</pre></td><td>Run <a href="#prozilla-osdemo"><code>pnpm run demo:start</code></a>. VSCode is configured to run this script whenever the project is opened.</td></tr><tr><td><pre>pnpm run build</pre></td><td>Build every package in sequential order.</td></tr><tr><td><pre>pnpm run stage</pre></td><td>Copy and combine the build of each package that comprises the website in the <code>dist</code> directory at the root.</td></tr><tr><td><pre>pnpm run deploy</pre></td><td>Clear the <code>dist</code> directory, stage each package that comprises the website, then deploy to GitHub pages. This should trigger a GitHub Action that deploys the build to production.</td></tr></tbody></table><h3 id="public-packages" tabindex="-1">Public packages <a class="header-anchor" href="#public-packages" aria-label="Permalink to &quot;Public packages&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Script</th><th>Description</th></tr></thead><tbody><tr><td><pre>pnpm run packages:build</pre></td><td>Build all dependencies of the <code>prozilla-os</code> package in sequential order and output to respective <code>dist</code> directories.</td></tr><tr><td><pre>pnpm run packages:update</pre></td><td>Create a new changeset for packages and update their version accordingly.</td></tr><tr><td><pre>pnpm run packages:release</pre></td><td>Publish the latest versions of each package to the npm registry.</td></tr></tbody></table><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Use <code>pnpm --filter &lt;package_selector&gt; build</code> to build a sepecific subset of packages or a single package and output to respective <code>dist</code> directory/directories. For more information about selecting/filtering specific packages, read <a href="https://pnpm.io/filtering" target="_blank" rel="noreferrer">pnpm&#39;s documentation on filtering</a>.</p></div><h3 id="internal-packages" tabindex="-1">Internal packages <a class="header-anchor" href="#internal-packages" aria-label="Permalink to &quot;Internal packages&quot;">​</a></h3><h4 id="demo-site" tabindex="-1">Demo site <a class="header-anchor" href="#demo-site" aria-label="Permalink to &quot;Demo site&quot;">​</a></h4><p>Package: <code>@prozilla-os/demo</code></p><table tabindex="0"><thead><tr><th>Script</th><th>Description</th></tr></thead><tbody><tr><td><pre>pnpm run demo:start</pre></td><td>Start Vite dev server at <a href="http://localhost:3000/" target="_blank" rel="noreferrer">localhost:3000</a>. Changes to module will dynamically be hot-reloaded, so normally there is no need for hard-refreshes. VSCode is configured to run this script whenever the project is opened.</td></tr><tr><td><pre>pnpm run demo:build</pre></td><td>Compile project using TypeScript and bundle all files into the <code>dist</code> directory, or the directory specified in config file. This directory can be uploaded to a web server.</td></tr><tr><td><pre>pnpm run demo:preview</pre></td><td>Start web server with preview of build at <a href="http://localhost:8080/" target="_blank" rel="noreferrer">localhost:8080</a>. Can be useful for validating build before deploying.</td></tr><tr><td><pre>pnpm run demo:stage</pre></td><td>Execute staging script, which stages the build and prepares it for deployment. Script will generate a sitemap, robots.txt and all other necessary files.</td></tr><tr><td><pre>pnpm run demo:fetch</pre></td><td>Fetch the repository tree using GitHub&#39;s API and store it as a JSON file that will be used to populate the virtual drive.</td></tr></tbody></table><h4 id="documentation-site" tabindex="-1">Documentation site <a class="header-anchor" href="#documentation-site" aria-label="Permalink to &quot;Documentation site&quot;">​</a></h4><p>Package: <code>@prozilla-os/docs</code></p><table tabindex="0"><thead><tr><th>Script</th><th>Description</th></tr></thead><tbody><tr><td><pre>pnpm run docs:start</pre></td><td>Start VitePress dev server at <a href="http://localhost:3000/" target="_blank" rel="noreferrer">localhost:3000</a>. Changes to module will dynamically be hot-reloaded, so normally there is no need for hard-refreshes.</td></tr><tr><td><pre>pnpm run docs:build</pre></td><td>Compile project using VitePress and output to the <code>dist</code> directory.</td></tr><tr><td><pre>pnpm run docs:preview</pre></td><td>Start web server with preview of build at <a href="http://localhost:8080/" target="_blank" rel="noreferrer">localhost:8080</a>. Can be useful for validating build before deploying.</td></tr><tr><td><pre>pnpm run docs:generate</pre></td><td>Generate basic information files in JSON format to use as a base for writing the documentation and output to the <code>data</code> directory.</td></tr></tbody></table><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="only-urls-with-a-scheme-in-file-data-and-node-are-supported-by-the-default-esm-loader" tabindex="-1"><code>Only URLs with a scheme in: file, data, and node are supported by the default ESM loader.</code> <a class="header-anchor" href="#only-urls-with-a-scheme-in-file-data-and-node-are-supported-by-the-default-esm-loader" aria-label="Permalink to &quot;\`Only URLs with a scheme in: file, data, and node are supported by the default ESM loader.\`&quot;">​</a></h3><p>To fix this error, run the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">pnpm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> install</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> --fix-lockfile</span></span>
<span class="line"><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">pnpm</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> run</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> build</span></span></code></pre></div><h2 id="support" tabindex="-1">Support <a class="header-anchor" href="#support" aria-label="Permalink to &quot;Support&quot;">​</a></h2><p>Feel free to reach out in our <a href="https://discord.gg/JwbyQP4tdz" target="_blank" rel="noreferrer">Discord server</a> if you need help with ProzillaOS.</p>`,26)]))}const g=t(o,[["render",s]]);export{u as __pageData,g as default};
