import{_ as n,c as o,j as t,a as r,t as l,a1 as s,o as i}from"./chunks/framework.C4R7_RYb.js";const f=JSON.parse('{"title":"Math functions","description":"Functions related to math","frontmatter":{"outline":"deep","description":"Functions related to math","package":"@prozilla-os/shared","head":[["meta",{"name":"og:title","content":"Math functions | ProzillaOS Docs"}],["meta",{"name":"twitter:title","content":"Math functions | ProzillaOS Docs"}],["meta",{"name":"og:description","content":"Functions related to math"}],["meta",{"name":"twitter:description","content":"Functions related to math"}],["link",{"rel":"canonical","href":"https://os.prozilla.dev/docs/reference/shared/functions/math"}],["meta",{"name":"og:url","content":"https://os.prozilla.dev/docs/reference/shared/functions/math"}],["meta",{"name":"twitter:url","content":"https://os.prozilla.dev/docs/reference/shared/functions/math"}],["meta",{"name":"og:locale","content":"en_US"}],["meta",{"name":"og:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"twitter:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}]]},"headers":[],"relativePath":"reference/shared/functions/math.md","filePath":"reference/shared/functions/math.md"}'),m={name:"reference/shared/functions/math.md"};function u(a,e,c,d,g,p){return i(),o("div",null,[e[0]||(e[0]=t("h1",{id:"math-functions",tabindex:"-1"},[r("Math functions "),t("a",{class:"header-anchor",href:"#math-functions","aria-label":'Permalink to "Math functions"'},"​")],-1)),t("p",null,l(a.$frontmatter.description),1),e[1]||(e[1]=s('<ul><li><strong>Source:</strong> <a href="https://github.com/prozilla-os/ProzillaOS/blob/main/packages/shared/src/features/_utils/math.utils.ts" target="_blank" rel="noreferrer"><code>math.utils.ts</code></a></li></ul><h2 id="clamp-value-min-max" tabindex="-1">clamp(value, min, max) <a class="header-anchor" href="#clamp-value-min-max" aria-label="Permalink to &quot;clamp(value, min, max)&quot;">​</a></h2><p>Clamp a value between a min and a max value</p><details class="details custom-block"><summary>Details</summary><ul><li><strong>Parameters</strong><ul><li><strong>value</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li><li><strong>min</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li><li><strong>max</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></details><h2 id="randomrange-min-max" tabindex="-1">randomRange(min, max) <a class="header-anchor" href="#randomrange-min-max" aria-label="Permalink to &quot;randomRange(min, max)&quot;">​</a></h2><p>Get a random number in a range between a min and a max value</p><details class="details custom-block"><summary>Details</summary><ul><li><strong>Parameters</strong><ul><li><strong>min</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li><li><strong>max</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></li><li><strong>Returns</strong><ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></details><h2 id="round-value-precision" tabindex="-1">round(value, precision) <a class="header-anchor" href="#round-value-precision" aria-label="Permalink to &quot;round(value, precision)&quot;">​</a></h2><p>Round a number off to a certain amount of digits after the comma</p><details class="details custom-block"><summary>Details</summary><ul><li><strong>Parameters</strong><ul><li><strong>value</strong> - Initial value <ul><li><strong>Type:</strong> <code>number</code></li></ul></li><li><strong>precision</strong> - Maximum amount of digits allowed after the comma <ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></li><li><strong>Returns</strong> - Rounded value <ul><li><strong>Type:</strong> <code>number</code></li></ul></li></ul></details>',10))])}const b=n(m,[["render",u]]);export{f as __pageData,b as default};
