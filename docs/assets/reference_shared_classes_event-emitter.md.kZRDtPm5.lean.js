import{_ as e,c as n,j as s,a,t as l,a3 as h,o as F}from"./chunks/framework.BAnOA2-A.js";const g=JSON.parse('{"title":"Class EventEmitter","description":"An abstract class for creating event emitters","frontmatter":{"outline":3,"description":"An abstract class for creating event emitters","package":"@prozilla-os/shared","head":[["meta",{"name":"og:title","content":"Class EventEmitter | ProzillaOS Docs"}],["meta",{"name":"twitter:title","content":"Class EventEmitter | ProzillaOS Docs"}],["meta",{"name":"og:description","content":"An abstract class for creating event emitters"}],["meta",{"name":"twitter:description","content":"An abstract class for creating event emitters"}],["link",{"rel":"canonical","href":"https://os.prozilla.dev/docs/reference/shared/classes/event-emitter"}],["meta",{"name":"og:url","content":"https://os.prozilla.dev/docs/reference/shared/classes/event-emitter"}],["meta",{"name":"twitter:url","content":"https://os.prozilla.dev/docs/reference/shared/classes/event-emitter"}],["meta",{"name":"og:locale","content":"en_US"}],["meta",{"name":"og:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"twitter:image","content":"https://os.prozilla.dev/docs/prozilla-os-title-banner.png"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}]]},"headers":[],"relativePath":"reference/shared/classes/event-emitter.md","filePath":"reference/shared/classes/event-emitter.md"}'),p={name:"reference/shared/classes/event-emitter.md"};function k(t,i,r,D,d,o){return F(),n("div",null,[i[0]||(i[0]=s("h1",{id:"class-eventemitter",tabindex:"-1"},[a("Class "),s("a",{href:"https://github.com/prozilla-os/ProzillaOS/blob/main/packages/shared/src/features/_utils/event.utils.ts",target:"_blank",rel:"noreferrer"},[s("code",null,"EventEmitter")]),a(),s("a",{class:"header-anchor",href:"#class-eventemitter","aria-label":'Permalink to "Class [`EventEmitter`](https://github.com/prozilla-os/ProzillaOS/blob/main/packages/shared/src/features/_utils/event.utils.ts)"'},"​")],-1)),s("p",null,l(t.$frontmatter.description),1),i[1]||(i[1]=h(`<h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><blockquote><p><code>&lt;EventMap extends EventNamesMap&gt;</code></p></blockquote><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme material-theme vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;">type</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> EventNamesMap</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> =</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> Record</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;">string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">,</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&gt;;</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="event-names" tabindex="-1">EVENT_NAMES <a class="header-anchor" href="#event-names" aria-label="Permalink to &quot;EVENT_NAMES&quot;">​</a></h3><p>A map of valid event names</p><ul><li><strong>Type:</strong> <code>EventNamesMap</code></li><li><strong>Default:</strong> <code>{}</code></li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="on-eventname-callback" tabindex="-1">on(eventName, callback) <a class="header-anchor" href="#on-eventname-callback" aria-label="Permalink to &quot;on(eventName, callback)&quot;">​</a></h3><p>Add event listener for an event</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><ul><li><code>&lt;Key extends keyof EventMap&gt;</code></li></ul><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><strong>eventName</strong><ul><li><strong>Type:</strong> <code>Key</code></li></ul></li><li><strong>callback</strong><ul><li><strong>Type:</strong> <code>(data: unknown) =&gt; void</code></li></ul></li></ul><h3 id="off-eventname-callback" tabindex="-1">off(eventName, callback) <a class="header-anchor" href="#off-eventname-callback" aria-label="Permalink to &quot;off(eventName, callback)&quot;">​</a></h3><p>Remove event listener for an event</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><ul><li><code>&lt;Key extends keyof EventMap&gt;</code></li></ul><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><strong>eventName</strong><ul><li><strong>Type:</strong> <code>Key</code></li></ul></li><li><strong>callback</strong><ul><li><strong>Type:</strong> <code>(data: unknown) =&gt; void</code></li></ul></li></ul><h3 id="emit-eventname-data" tabindex="-1">emit(eventName, data) <a class="header-anchor" href="#emit-eventname-data" aria-label="Permalink to &quot;emit(eventName, data)&quot;">​</a></h3><p>Dispatch event</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><ul><li><code>&lt;Key extends keyof EventMap&gt;</code></li></ul><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><strong>eventName</strong><ul><li><strong>Type:</strong> <code>Key</code></li></ul></li><li><strong>data</strong><ul><li><strong>Type:</strong> <code>unknown | undefined</code></li></ul></li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Here is a class called Stream that sends events when the stream starts, stops and when the stream receives input. Any event listener listening to the <code>&quot;new&quot;</code> event, will receive the input from the stream.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme material-theme vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">import</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;"> EventEmitter</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> }</span><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;"> from</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> &quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">@prozilla-os/shared</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;">const</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;"> StreamEvents </span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">=</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	new</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> &quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">new</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	start</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> &quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">start</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	stop</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">:</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> &quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">stop</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">}</span><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;"> as</span><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;"> const</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;"> class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> Stream</span><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;"> extends</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> EventEmitter</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&lt;typeof</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;"> StreamEvents</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&gt;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#C792EA;">	static</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;"> EVENT_NAMES</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> =</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;"> StreamEvents</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	enabled</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">:</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> boolean</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> =</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF9CAC;"> false</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	start</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">()</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">		if</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">this.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;">enabled</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">			return</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">		this.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;">enabled</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> =</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF9CAC;"> true</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">		this.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#82AAFF;">emit</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">start</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	stop</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">()</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">		if</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">!this.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;">enabled</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">			return</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">		this.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;">enabled</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> =</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF9CAC;"> false</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">		this.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#82AAFF;">emit</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">stop</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">	send</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">(</span><span style="--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;--shiki-light:#EEFFFF;--shiki-light-font-style:italic;">text</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">:</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#FFCB6B;"> string</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#89DDFF;--shiki-light-font-style:italic;">		if</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">this.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;">enabled</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">			this.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#82AAFF;">emit</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">(</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#C3E88D;--shiki-light:#C3E88D;">new</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">&quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">,</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#EEFFFF;"> text</span><span style="--shiki-dark:#F07178;--shiki-light:#F07178;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">	}</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#89DDFF;">}</span></span></code></pre></div>`,29))])}const y=e(p,[["render",k]]);export{g as __pageData,y as default};
